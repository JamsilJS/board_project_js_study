[{"C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\index.js":"1","C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\App.js":"2","C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\pages\\NotFound.js":"3","C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\services\\API.js":"4","C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\pages\\board\\Board.js":"5","C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\pages\\login\\LoginPage.js":"6","C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\components\\Header.js":"7","C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\components\\Footer.js":"8","C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\components\\Register.js":"9","C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\components\\BoardList.js":"10","C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\components\\BoardDetail.js":"11","C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\components\\BoardCreate.js":"12","C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\components\\MyBoardList.js":"13","C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\components\\UserInfo.js":"14","C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\components\\SideMenu.js":"15","C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\components\\Login.js":"16"},{"size":205,"mtime":1611137752170,"results":"17","hashOfConfig":"18"},{"size":997,"mtime":1611137752006,"results":"19","hashOfConfig":"18"},{"size":152,"mtime":1611137752179,"results":"20","hashOfConfig":"18"},{"size":2524,"mtime":1611144891901,"results":"21","hashOfConfig":"18"},{"size":7545,"mtime":1611153269115,"results":"22","hashOfConfig":"18"},{"size":576,"mtime":1611137752198,"results":"23","hashOfConfig":"18"},{"size":788,"mtime":1611140114281,"results":"24","hashOfConfig":"18"},{"size":1222,"mtime":1611137752052,"results":"25","hashOfConfig":"18"},{"size":3539,"mtime":1611143757040,"results":"26","hashOfConfig":"18"},{"size":2743,"mtime":1611155473211,"results":"27","hashOfConfig":"18"},{"size":7777,"mtime":1611145100582,"results":"28","hashOfConfig":"18"},{"size":2156,"mtime":1611137752017,"results":"29","hashOfConfig":"18"},{"size":1727,"mtime":1611137752094,"results":"30","hashOfConfig":"18"},{"size":2393,"mtime":1611137752115,"results":"31","hashOfConfig":"18"},{"size":1863,"mtime":1611138598433,"results":"32","hashOfConfig":"18"},{"size":2984,"mtime":1611138106282,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"124lgwl",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\index.js",[],["70","71"],"C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\App.js",[],"C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\pages\\NotFound.js",[],"C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\services\\API.js",[],"C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\pages\\board\\Board.js",[],"C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\pages\\login\\LoginPage.js",[],"C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\components\\Header.js",["72"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport logImg from '../img/header_logo.png';\r\nconst useStyles = makeStyles((theme) => ({\r\n    header: {\r\n        position: \"flex\",\r\n        textAlign: \"center\",\r\n        margin: 0,\r\n        padding: 0,\r\n        top:0,\r\n        background: \"#FFFFFF\",\r\n        alignItems:\"center\",\r\n        zIndex: 3,\r\n    },\r\n    i: {\r\n        padding: 30,\r\n        width: 120,\r\n        height: 120,\r\n    }\r\n}))\r\n\r\nfunction Header() {\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar className={classes.header} elevation={0} position=\"relative\">\r\n            <img src={logImg} className={classes.i} alt=\"load image failed\"></img>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default Header;","C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\components\\Footer.js",[],"C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\components\\Register.js",[],"C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\components\\BoardList.js",["73","74","75"],"C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\components\\BoardDetail.js",["76","77"],"\r\nimport Button from '@material-ui/core/Button';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { GET_BOARD_INFO, DECODE_TOKEN, DELETE_BOARD, GET_COMMENT, CREATE_COMMENT } from '../services/API';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: \"relative\",\r\n        width: \"100%\",\r\n    },\r\n    backBtn: {\r\n        position: \"relatvie\",\r\n        margin:10\r\n    },\r\n    delBtn: {\r\n        position: \"relatvie\",\r\n        margin:10\r\n    },\r\n    card: {\r\n        height: \"15rem\",\r\n        minWidth: \"400\",\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    paper: {\r\n        height: \"20rem\",\r\n    },\r\n    pagenation: {\r\n        textAlign: \"center\"\r\n    },\r\n    addArea: {\r\n        margin: 10,\r\n        padding: 3,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    input: {\r\n        flex: 1,\r\n    },\r\n})\r\n\r\nfunction getTimeStamp(date) {\r\n    let d = new Date(date);\r\n    let s =\r\n        leadingZeros(d.getFullYear(), 4) + '-' +\r\n        leadingZeros(d.getMonth() + 1, 2) + '-' +\r\n        leadingZeros(d.getDate(), 2) + ' ' +\r\n\r\n        leadingZeros(d.getHours(), 2) + ':' +\r\n        leadingZeros(d.getMinutes(), 2) + ':' +\r\n        leadingZeros(d.getSeconds(), 2);\r\n\r\n    return s;\r\n}\r\n\r\nfunction leadingZeros(n, digits) {\r\n    let zero = '';\r\n    n = n.toString();\r\n\r\n    if (n.length < digits) {\r\n        for (let i = 0; i < digits - n.length; i++)\r\n            zero += '0';\r\n    }\r\n    return zero + n;\r\n}\r\n\r\n\r\nfunction BoardDetail(props) {\r\n    const classes = useStyles();\r\n    const boardInfo = {\r\n        no: null,\r\n        title: \"\",\r\n        b_content: \"\",\r\n        createdDate: \"\",\r\n        name: \"\",\r\n    }\r\n    const [comment, setComment] = useState(\"\");\r\n    const [change, setChange] = useState(false);\r\n    const [commentList, setCommentList] = useState([]);\r\n    const [info, setInfo] = useState(boardInfo);\r\n    const [isAuth, setIsAuth] = useState(false);\r\n    const [uNo, setuNo] = useState(null);\r\n    const itemsPerPage = 3;\r\n    const [page, setPage] = useState(1);\r\n    const [noOfPages, setNoOfPages] = useState(\r\n        Math.ceil(commentList.length / itemsPerPage)\r\n    );\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem(\"user\");\r\n\r\n        DECODE_TOKEN({ token }).then((decode) => {\r\n            const userNo = decode.no;\r\n            setuNo(userNo);\r\n            const no = props.data;\r\n            GET_BOARD_INFO({ no }).then((res) => {\r\n                if (userNo === res[0].userNo) {\r\n                    setIsAuth(true);\r\n                }\r\n                const date = new Date(res[0].createdDate);\r\n                res[0].createdDate = getTimeStamp(date);\r\n                setInfo(res[0]);\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const boardNo = props.data;\r\n        GET_COMMENT({ boardNo }).then((boardList) => {\r\n            setCommentList(boardList.data.reverse());\r\n            setNoOfPages(Math.ceil(boardList.data.length / itemsPerPage));\r\n        })\r\n        setChange(false)\r\n    }, [change])\r\n\r\n    const handleDelete = () => {\r\n        const boardNo = props.data;\r\n        DELETE_BOARD({ boardNo }).then(() => {\r\n            props.handleBack();\r\n        });\r\n    }\r\n\r\n    const addComment = (e) => {\r\n        e.preventDefault();\r\n        if (comment === \"\") {\r\n            alert(\"comment is empty. please fill comment\");\r\n            return;\r\n        }\r\n        else {\r\n            const content = comment;\r\n            const boardNo = props.data;\r\n            const userNo = uNo\r\n            CREATE_COMMENT({ content, boardNo, userNo }).then((res) => {\r\n                if (res.data === \"ADD_COMMENT\") {\r\n                    alert(\"comment added\");\r\n                    setChange(true);\r\n                    setComment(\"\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Card className={classes.card} variant=\"outlined\">\r\n                        <CardContent>\r\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                글쓴이 : {info.name}\r\n                            </Typography>\r\n                            <Typography variant=\"h5\" component=\"h2\">\r\n                                {info.title}\r\n                            </Typography>\r\n                            <Typography className={classes.pos} color=\"textSecondary\">\r\n                                {info.createdDate}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" component=\"p\">\r\n                                {info.b_content}\r\n                            </Typography>\r\n                        </CardContent>\r\n                      \r\n                    </Card>\r\n                    {isAuth ? (<Button className={classes.delBtn} variant=\"contained\" color=\"secondary\" onClick={handleDelete}>삭제하기</Button>) : (<></>)}               \r\n                    <Button className={classes.backBtn} variant=\"contained\" color=\"secondary\" onClick={props.handleBack}>뒤로가기</Button>\r\n                 </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <List>\r\n                        {commentList.slice((page - 1) * itemsPerPage, page * itemsPerPage).map((value,index) =>\r\n                            (\r\n                            <ListItem key={index}>\r\n                                <ListItemText primary={value.name} secondary={value.c_content} />\r\n                            </ListItem>\r\n                            )\r\n                        )}\r\n                    </List>\r\n                    <Paper component=\"form\" onSubmit={addComment} className={classes.addArea}>\r\n                        <InputBase\r\n                            className={classes.input}\r\n                            placeholder=\"comment\"\r\n                            onChange={(e) => {\r\n                                setComment(e.target.value);\r\n                            }}\r\n                            value={comment}\r\n                        />\r\n                        <Divider className={classes.divider} orientation=\"vertical\" />\r\n                        <IconButton color=\"primary\" className={classes.iconButton} onClick={addComment}>\r\n                            <CreateIcon />\r\n                        </IconButton>\r\n                    </Paper>\r\n                    <Grid container justify=\"center\">\r\n                        <Pagination\r\n                            count={noOfPages}\r\n                            page={page}\r\n                            onChange={handlePageChange}\r\n                            default={1}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BoardDetail;","C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\components\\BoardCreate.js",[],"C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\components\\MyBoardList.js",["78"],"import ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { GET_MYBOARD } from '../services/API';\r\nimport List from '@material-ui/core/List';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction MyBoardList(props) {\r\n    const [board, setBoard] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const userNo = props.userInfo.no;\r\n        GET_MYBOARD({ userNo }).then((res) => {\r\n            console.log(res.data.length)\r\n            if(res.data.length === 0){\r\n                setBoard([])\r\n            }\r\n            else{\r\n                setBoard(res.data);\r\n            }\r\n        });\r\n    },[]);\r\n\r\n    const handleClick = (no) => {\r\n        props.getBoardNo(no);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <List>\r\n            {board ? (\r\n                <div>\r\n                    {board.map((value, index) => {\r\n                        return (\r\n                            <div key={index} >\r\n                                <ListItem button onClick={() => handleClick(value.no)}>\r\n                                    <ListItemText primary={value.title} />\r\n                                </ListItem>\r\n                                <Divider />\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    empty\r\n                </div>\r\n            )}\r\n        </List >\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={props.myBoardBack}>Back</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyBoardList;","C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\components\\UserInfo.js",[],"C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\components\\SideMenu.js",[],"C:\\Users\\phila\\Desktop\\board_project_js_study\\front\\src\\components\\Login.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":26,"column":13,"nodeType":"85","endLine":26,"endColumn":77},{"ruleId":"86","severity":1,"message":"87","line":35,"column":12,"nodeType":"88","messageId":"89","endLine":35,"endColumn":22},{"ruleId":"86","severity":1,"message":"90","line":35,"column":24,"nodeType":"88","messageId":"89","endLine":35,"endColumn":37},{"ruleId":"91","severity":1,"message":"92","line":70,"column":25,"nodeType":"88","messageId":"93","endLine":70,"endColumn":30},{"ruleId":"94","severity":1,"message":"95","line":123,"column":8,"nodeType":"96","endLine":123,"endColumn":10,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"95","line":132,"column":8,"nodeType":"96","endLine":132,"endColumn":16,"suggestions":"98"},{"ruleId":"94","severity":1,"message":"99","line":23,"column":7,"nodeType":"96","endLine":23,"endColumn":9,"suggestions":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'startIndex' is assigned a value but never used.","Identifier","unusedVar","'setStartIndex' is assigned a value but never used.","no-use-before-define","'board' was used before it was defined.","usedBeforeDefined","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array.","ArrayExpression",["103"],["104"],"React Hook useEffect has a missing dependency: 'props.userInfo.no'. Either include it or remove the dependency array.",["105"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [props.data]",{"range":"112","text":"113"},"Update the dependencies array to be: [change, props.data]",{"range":"114","text":"115"},"Update the dependencies array to be: [props.userInfo.no]",{"range":"116","text":"117"},[3511,3513],"[props.data]",[3811,3819],"[change, props.data]",[767,769],"[props.userInfo.no]"]